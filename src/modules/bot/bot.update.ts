import { Injectable } from '@nestjs/common';
import { Ctx, Hears, InjectBot, Start, Update } from 'nestjs-telegraf';
import { Context, Telegraf } from 'telegraf';
import { BotService } from './bot.service';
import { SceneContext } from 'telegraf/typings/scenes';

@Injectable()
@Update()
export class BotUpdate {
  constructor(
    @InjectBot() private readonly bot: Telegraf<Context>,
    private readonly botService: BotService,
  ) {}

  @Start()
  async start(@Ctx() ctx: SceneContext & Context) {
    const client = {
      firstname: ctx.from.first_name,
      lastname: ctx.from.last_name,
      telegram_username: ctx.from.username,
      telegram_id: ctx.from.id,
    };
    console.log(client);
    try {
      await ctx.reply(
        `‚Äº–î–æ—Ä–æ–≥–∏–µ —É—á–µ–Ω–∏–∫–∏ Chinoesh Team‚Äº\n\n` +
          `‚òë–≠—Ç–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –∫—É—Ä—Å–∞ ¬´–ö—Ä–∏–ø—Ç–æ–ª–æ–≥–∏—è 5.0¬ª, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–Ω, —á—Ç–æ –±—ã —É–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞—à–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤ –∏ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n\n` +
          `‚úÖ–ê–Ω–æ–Ω—Å –Ω–æ–≤–æ—Å—Ç–µ–π –∏ —Å–æ–±—ã—Ç–∏–∏ –Ω–∞ –∫—É—Ä—Å–µ\n` +
          `‚úÖ–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–µ - –æ—Ç–ø—Ä–∞–≤–∫–∞ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ –±–æ—Ç–∞ (—á—É—Ç—å –ø–æ–∑–¥–Ω–µ–µ —Å–µ–≥–æ–¥–Ω—è –¥–∞–¥–∏–º –ø–æ–ª–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É)\n` +
          `‚úÖ–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã\n` +
          `üí™–ù–∞–¥–µ–µ–º—Å—è, —á—Ç–æ –±–æ—Ç —Å—Ç–∞–Ω–µ—Ç —É–¥–æ–±–Ω—ã–º –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º —Ä–µ—à–µ–Ω–∏–µ–º –¥–ª—è –Ω–∞—à–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤\n\n` +
          `üî•–° —É–≤–∞–∂–µ–Ω–∏–µ–º, Chinoesh Team`,
        {
          reply_markup: await this.botService.showKeyboardMenuButtons(),
        },
      );
      const isClient = await this.botService.getClient(client.telegram_id);
      console.log(isClient);
      if (!isClient) await this.botService.createClient(ctx, client);
      await ctx.scene.enter('base');
    } catch (err) {
      await this.botService.forwardToAdmin(
        'Update start' + JSON.stringify(client) + ' ' + err.message,
      );
    }
  }

  @Hears('/menu')
  async returnBase(@Ctx() ctx: SceneContext) {
    await ctx.scene.enter('base');
  }

  @Hears('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
  async returnBase2(@Ctx() ctx: SceneContext) {
    await ctx.scene.enter('base');
  }
}
