import { Injectable } from '@nestjs/common';
import { Ctx, Hears, InjectBot, On, Scene, SceneEnter } from 'nestjs-telegraf';
import { BotService } from '../bot.service';
import { Context, Telegraf } from 'telegraf';
import { SceneContext } from 'telegraf/typings/scenes';

@Injectable()
@Scene('homework')
export class HomeworkScene {
  constructor(
    private readonly botService: BotService,
    @InjectBot() private readonly bot: Telegraf<Context>,
  ) {}

  @SceneEnter()
  async enter(@Ctx() ctx: SceneContext) {
    await ctx.replyWithHTML(
      `**–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –≤ –≤–∏–¥–µ —Ñ–∞–π–ª–æ–≤ –∏–ª–∏ —Ñ–æ—Ç–æ/—Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –ø–æ –æ–¥–Ω–æ–º—É.\n**` +
        `*üö´ –¢–µ–∫—Å—Ç –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è.* **–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ñ–∞–π–ª –ø—Ä–∏–Ω—è—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞.\n**` +
        `**–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞** *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*.\n` +
        `**–ö–Ω–æ–ø–∫–∞** *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é* **–Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ.**`,
      {
        parse_mode: 'Markdown',
      },
    );
  }

  @Hears('/menu')
  async returnBase(@Ctx() ctx: SceneContext) {
    await ctx.scene.enter('base');
  }

  @Hears('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
  async returnBase2(@Ctx() ctx: SceneContext) {
    await ctx.scene.enter('base');
  }

  @On('message')
  async submitToChannel(@Ctx() ctx: Context & SceneContext) {
    const client = {
      firstname: ctx.from.first_name,
      lastname: ctx.from.last_name,
      telegram_username: ctx.from.username,
      telegram_id: ctx.from.id,
    };
    try {
      console.log(client);
      console.log(ctx.session['hm_channel']);
      console.log(ctx.session['hm_id']);
      await ctx.telegram.sendMessage(
        ctx.session['hm_channel'],
        `Student ID: ${client.telegram_id}\n` +
          `Student username: @${client.telegram_username}\n` +
          `Homework ID: ${ctx.session['hm_id']}`,
      );
      await ctx.copyMessage(ctx.session['hm_channel']);
      await ctx.reply('–§–∞–π–ª –ø—Ä–∏–Ω—è—Ç');
    } catch (err) {
      console.log(err);
      console.log(err.message);
      await this.botService.forwardToAdmin(
        err.message + `${ctx.message.from.id} ${ctx.message.from.username}`,
      );
      await ctx.reply(
        '–í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è. –°–≤—è–∂–∏—Ç–µ—Å—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º @DoubledBo.',
      );
    }
  }
}
